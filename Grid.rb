
# This Method is for the basic grid on which information will be displayed to the user. Each grid square contains a value to be determined elsewhere.

b_g = Array.new(101, nil)       # This creates 101 variables with nil value, to be assigned in the grid Matrix. Position 0 is deliberately redundant.

def show_grid(b_g)

        grid = %{
            1    2    3    4    5    6    7    8    9    10
            |----|----|----|----|----|----|----|----|----|----|           
        A   |  #{b_g[1]}  |  #{b_g[2]}  |  #{b_g[3]}  |  #{b_g[4]}  |  #{b_g[5]}  |  #{b_g[6]}  |  #{b_g[7]}  |  #{b_g[8]}  |  #{b_g[9]}  |  #{b_g[10]}  |
            |----|----|----|----|----|----|----|----|----|----|           
        B   |  #{b_g[11]}  |  #{b_g[12]}  |  #{b_g[13]}  |  #{b_g[14]}  |  #{b_g[15]}  |  #{b_g[16]}  |  #{b_g[17]}  |  #{b_g[18]}  |  #{b_g[19]}  |  #{b_g[20]}  |
            |----|----|----|----|----|----|----|----|----|----|           
        C   |  #{b_g[21]}  |  #{b_g[22]}  |  #{b_g[23]}  |  #{b_g[24]}  |  #{b_g[25]}  |  #{b_g[26]}  |  #{b_g[27]}  |  #{b_g[28]}  |  #{b_g[29]}  |  #{b_g[30]}  |
            |----|----|----|----|----|----|----|----|----|----|              
        D   |  #{b_g[31]}  |  #{b_g[32]}  |  #{b_g[33]}  |  #{b_g[34]}  |  #{b_g[35]}  |  #{b_g[36]}  |  #{b_g[37]}  |  #{b_g[38]}  |  #{b_g[39]}  |  #{b_g[40]}  |
            |----|----|----|----|----|----|----|----|----|----|           
        E   |  #{b_g[41]}  |  #{b_g[42]}  |  #{b_g[43]}  |  #{b_g[44]}  |  #{b_g[45]}  |  #{b_g[46]}  |  #{b_g[47]}  |  #{b_g[48]}  |  #{b_g[49]}  |  #{b_g[50]}  |
            |----|----|----|----|----|----|----|----|----|----|           
        F   |  #{b_g[51]}  |  #{b_g[52]}  |  #{b_g[53]}  |  #{b_g[54]}  |  #{b_g[55]}  |  #{b_g[56]}  |  #{b_g[57]}  |  #{b_g[58]}  |  #{b_g[59]}  |  #{b_g[60]}  |
            |----|----|----|----|----|----|----|----|----|----|           
        G   |  #{b_g[61]}  |  #{b_g[62]}  |  #{b_g[63]}  |  #{b_g[64]}  |  #{b_g[65]}  |  #{b_g[66]}  |  #{b_g[67]}  |  #{b_g[68]}  |  #{b_g[69]}  |  #{b_g[70]}  |
            |----|----|----|----|----|----|----|----|----|----|              
        H   |  #{b_g[71]}  |  #{b_g[72]}  |  #{b_g[73]}  |  #{b_g[74]}  |  #{b_g[75]}  |  #{b_g[76]}  |  #{b_g[77]}  |  #{b_g[78]}  |  #{b_g[79]}  |  #{b_g[80]}  |
            |----|----|----|----|----|----|----|----|----|----|           
        I   |  #{b_g[81]}  |  #{b_g[82]}  |  #{b_g[83]}  |  #{b_g[84]}  |  #{b_g[85]}  |  #{b_g[86]}  |  #{b_g[87]}  |  #{b_g[88]}  |  #{b_g[89]}  |  #{b_g[90]}  |
            |----|----|----|----|----|----|----|----|----|----|           
        J   |  #{b_g[91]}  |  #{b_g[92]}  |  #{b_g[93]}  |  #{b_g[94]}  |  #{b_g[95]}  |  #{b_g[96]}  |  #{b_g[97]}  |  #{b_g[98]}  |  #{b_g[99]}  |  #{b_g[100]}  |
            |----|----|----|----|----|----|----|----|----|----|           

        }

puts grid

end

show_grid(b_g)

REFERENCE_HASH = {
    "A1" => b_g[1],
    "A2" => b_g[2],
    "A3" => b_g[3],
    "A4" => b_g[4],
    "A5" => b_g[5],
    "A6" => b_g[6],
    "A7" => b_g[7],
    "A8" => b_g[8],
    "A9" => b_g[9],
    "A10" => b_g[10],
    
    "B1" => b_g[11],
    "B2" => b_g[12],
    "B3" => b_g[13],
    "B4" => b_g[14],
    "B5" => b_g[15],
    "B6" => b_g[16],
    "B7" => b_g[17],
    "B8" => b_g[18],
    "B9" => b_g[19],
    "B10" => b_g[20],

    "C1" => b_g[21],
    "C2" => b_g[22],
    "C3" => b_g[23],
    "C4" => b_g[24],
    "C5" => b_g[25],
    "C6" => b_g[26],
    "C7" => b_g[27],
    "C8" => b_g[28],
    "C9" => b_g[29],
    "C10" => b_g[30],

    "D1" => b_g[31],
    "D2" => b_g[32],
    "D3" => b_g[33],
    "D4" => b_g[34],
    "D5" => b_g[35],
    "D6" => b_g[36],
    "D7" => b_g[37],
    "D8" => b_g[38],
    "D9" => b_g[39],
    "D10" => b_g[40],

    "E1" => b_g[41],
    "E2" => b_g[42],
    "E3" => b_g[43],
    "E4" => b_g[44],
    "E5" => b_g[45],
    "E6" => b_g[46],
    "E7" => b_g[47],
    "E8" => b_g[48],
    "E9" => b_g[49],
    "E10" => b_g[50],

    "F1" => b_g[51],
    "F2" => b_g[52],
    "F3" => b_g[53],
    "F4" => b_g[54],
    "F5" => b_g[55],
    "F6" => b_g[56],
    "F7" => b_g[57],
    "F8" => b_g[58],
    "F9" => b_g[59],
    "F10" => b_g[60],

    "G1" => b_g[61],
    "G2" => b_g[62],
    "G3" => b_g[63],
    "G4" => b_g[64],
    "G5" => b_g[65],
    "G6" => b_g[66],
    "G7" => b_g[67],
    "G8" => b_g[68],
    "G9" => b_g[69],
    "G10" => b_g[70],

    "H1" => b_g[71],
    "H2" => b_g[72],
    "H3" => b_g[73],
    "H4" => b_g[74],
    "H5" => b_g[75],
    "H6" => b_g[76],
    "H7" => b_g[77],
    "H8" => b_g[78],
    "H9" => b_g[79],
    "H10" => b_g[80],

    "I1" => b_g[81],
    "I2" => b_g[82],
    "I3" => b_g[83],
    "I4" => b_g[84],
    "I5" => b_g[85],
    "I6" => b_g[86],
    "I7" => b_g[87],
    "I8" => b_g[88],
    "I9" => b_g[89],
    "I10" => b_g[90],

    "J1" => b_g[91],
    "J2" => b_g[92],
    "J3" => b_g[93],
    "J4" => b_g[94],
    "J5" => b_g[95],
    "J6" => b_g[96],
    "J7" => b_g[97],
    "J8" => b_g[98],
    "J9" => b_g[99],
    "J10" => b_g[100],

    "K1" => b_g[1],
    "K2" => b_g[2],
    "K3" => b_g[3],
    "K4" => b_g[4],
    "K5" => b_g[5],
    "K6" => b_g[6],
    "K7" => b_g[7],
    "K8" => b_g[8],
    "K9" => b_g[9],
    "K10" => b_g[10]
}



